const axios = require('axios');

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞
const BOT_TOKEN = '7746110687:AAElvNykURie6fU1kBiFGZ_c4co75n9qgRs';
const BOT_NAME = 'gosha_demo_bot';
const WEBHOOK_URL = 'https://gosha-bot.vercel.app/api/webhook';

// –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç Google —Å –∞–∫–∫–æ—Ä–¥–∞–º–∏
const SONGBOOK_URL = 'https://docs.google.com/document/d/1e7t6SXSQKO9DMIMehiY_8NwHcQQQ1OVv/edit';

// –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–µ—Å–µ–Ω
let songsStats = {};

// –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –ø–µ—Å–Ω–∏
let lastSongRequests = {};

// –ü–µ—Å–Ω–∏ –∏–∑ –∞–∫–∫–æ—Ä–¥–Ω–∏–∫–∞ (–±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω—è—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏)
const songbook = [
  {
    title: "–ê—Ç–ª–∞–Ω—Ç—ã",
    author: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ì–æ—Ä–æ–¥–Ω–∏—Ü–∫–∏–π",
    lyrics: `Am             Dm          E                 Am
1.–ö–æ–≥–¥–∞ –Ω–∞ —Å–µ—Ä–¥—Ü–µ —Ç—è–∂–µ—Å—Ç—å, –∏ —Ö–æ–ª–æ–¥–Ω–æ –≤ –≥—Ä—É–¥–∏,
Am             Dm        G                 C
–ö —Å—Ç—É–ø–µ–Ω—è–º –≠—Ä–º–∏—Ç–∞–∂–∞ —Ç—ã –≤ —Å—É–º–µ—Ä–∫–∞—Ö –ø—Ä–∏–¥–∏.
A7                Dm    G                 C
–ì–¥–µ –±–µ–∑ –ø–∏—Ç—å—è –∏ —Ö–ª–µ–±–∞, –∑–∞–±—ã—Ç—ã–µ –≤ –≤–µ–∫–∞—Ö,
Dm             Am   E                 Am
–ê—Ç–ª–∞–Ω—Ç—ã –¥–µ—Ä–∂–∞—Ç –Ω–µ–±–æ –Ω–∞ –∫–∞–º–µ–Ω–Ω—ã—Ö —Ä—É–∫–∞—Ö.

2.–î–µ—Ä–∂–∞—Ç—å –µ–≥–æ –º–∞—Ö–∏–Ω—É –Ω–µ –º—ë–¥ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã,
–ù–∞–ø—Ä—è–∂–µ–Ω—ã –∏—Ö —Å–ø–∏–Ω—ã, –∫–æ–ª–µ–Ω–∏ —Å–≤–µ–¥–µ–Ω—ã.
–ò—Ö —Ç—è–∂–∫–∞—è —Ä–∞–±–æ—Ç–∞ –≤–∞–∂–Ω–µ–µ –≤—Å–µ—Ö —Ä–∞–±–æ—Ç:
–ò–∑ –Ω–∏—Ö –æ—Å–ª–∞–±–Ω–µ—Ç –∫—Ç–æ-—Ç–æ, –∏ –Ω–µ–±–æ —É–ø–∞–¥—ë—Ç.

3.–í–æ —Ç—å–º–µ –∑–∞–ø–ª–∞—á—É—Ç –≤–¥–æ–≤—ã, –ø–æ–≤—ã–≥–æ—Ä—è—Ç –ø–æ–ª—è,
–ò –≤—Å—Ç–∞–Ω–µ—Ç –≥—Ä–∏–± –ª–∏–ª–æ–≤—ã–π, –∏ –∫–æ–Ω—á–∏—Ç—Å—è –ó–µ–º–ª—è.
–ê –Ω–µ–±–æ –≥–æ–¥ –æ—Ç –≥–æ–¥–∞ –≤—Å—ë –¥–∞–≤–∏—Ç —Ç—è–∂–µ–ª–µ–π,
–î—Ä–æ–∂–∏—Ç –æ–Ω–æ –æ—Ç –≥—É–¥–∞ —Ä–∞–∫–µ—Ç–Ω—ã—Ö –∫–æ—Ä–∞–±–ª–µ–π.

4.–°—Ç–æ—è—Ç –æ–Ω–∏ - —Ä–µ–±—è—Ç–∞, —Ç–æ—á—ë–Ω—ã–µ —Ç–µ–ª–∞,
–ü–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –∫–æ–≥–¥–∞-—Ç–æ, –∞ —Å–º–µ–Ω–∞ –Ω–µ –ø—Ä–∏—à–ª–∞.
–ò—Ö —Å–≤–µ—Ç –¥–Ω–µ–≤–Ω–æ–π –Ω–µ —Ä–∞–¥—É–µ—Ç, –∏–º –Ω–æ—á—å—é –Ω–µ –¥–æ —Å–Ω–∞.
–ò—Ö –∫—Ä–∞—Å–æ—Ç—É —Å–Ω–∞—Ä—è–¥–∞–º–∏ —É—Ä–æ–¥—É–µ—Ç –≤–æ–π–Ω–∞.

5.–°—Ç–æ—è—Ç –æ–Ω–∏ –Ω–∞–≤–µ–∫–∏, —É–ø–µ—Ä—à–∏—Å—å –ª–±—ã –≤ –±–µ–¥—É.
–ù–µ –±–æ–≥–∏ —á–µ–ª–æ–≤–µ–∫–∏, –ø—Ä–∏–≤—ã–∫—à–∏–µ –∫ —Ç—Ä—É–¥—É.
–ò –∂–∏—Ç—å –µ—â–µ –Ω–∞–¥–µ–∂–¥–µ –¥–æ —Ç–æ–π –ø–æ—Ä—ã, –ø–æ–∫–∞
–ê—Ç–ª–∞–Ω—Ç—ã –Ω–µ–±–æ –¥–µ—Ä–∂–∞—Ç –Ω–∞ –∫–∞–º–µ–Ω–Ω—ã—Ö —Ä—É–∫–∞—Ö.`,
    group: 1,
    rhythm: "–ü—Ä–æ—Å—Ç–æ–π –±–æ–π (—á–µ—Ç—ã—Ä—ë—Ö–¥–æ–ª—å–Ω—ã–π)",
    notes: "–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ—á–∫–∏ –∫—É–ø–ª–µ—Ç–∞ —Ö2"
  },
  {
    title: "–ü–µ—Ä–µ–≤–∞–ª",
    author: "–Æ—Ä–∏–π –í–∏–∑–±–æ—Ä",
    lyrics: `      Am                  Dm
–ü—Ä–æ—Å—Ç–æ –Ω–µ—á–µ–≥–æ –Ω–∞–º –±–æ–ª—å—à–µ —Ç–µ—Ä—è—Ç—å,
    G                      C  E
–í—Å–µ –ø–æ—Ç–µ—Ä—è–Ω–æ, –ø—Ä–æ–∏–≥—Ä–∞–Ω–æ –≤ –ø—Ä–∞—Ö.
     Am                    Dm
–ò –æ—Å—Ç–∞–ª–∞—Å—å –≤ —ç—Ç–æ–º –º–∏—Ä–µ –æ–¥–Ω–∞
     H7                  E
–í —Ç—Ä–µ—Ö –≤–æ–∫–∑–∞–ª–∞—Ö –∑–µ–º–ª—è –∏ –∑–æ–ª–∞.

             Am        Dm
–ü–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª,
             G         C  E
–ü–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª,
        Am              Dm
–ú—ã –∑–∞—Ç–µ—Ä—è–Ω—ã –≤ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–µ,
        H7              E
–ù–∞—à–µ –≤—Ä–µ–º—è –Ω–∞ —ç—Ç–æ–π –≤–æ–π–Ω–µ.

–í —á–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç –æ–∫—Ä–∞—Å–∏–ª–∞—Å—å —Ç—Ä–∞–≤–∞,
–í –∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –æ–∫—Ä–∞—Å–∏–ª–∞—Å—å —Ä–µ–∫–∞.
–ê –±–µ–¥–∞, –æ–Ω–∞ –≤–µ–∑–¥–µ –æ–¥–Ω–∞,
–°–ª–æ–≤–Ω–æ —Å–Ω–µ–≥, —Å–ª–æ–≤–Ω–æ —Å–º–µ—Ä—Ç—å, –∫–∞–∫ —Å—Ç–µ–Ω–∞.

–ü–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª,
–ü–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª,
–ú—ã –∑–∞—Ç–µ—Ä—è–Ω—ã –≤ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–µ,
–ù–∞—à–µ –≤—Ä–µ–º—è –Ω–∞ —ç—Ç–æ–π –≤–æ–π–Ω–µ.

–ù–∞–ø–∏—à–∏ –ø–∏—Å—å–º–µ—Ü–æ –¥–∞ –æ—Ç—Ü—É,
–ù–∞–ø–∏—à–∏, –∫–∞–∫ –∂–∏–≤–µ—à—å, –∫–∞–∫ –¥–µ–ª–∞.
–ß—Ç–æ –∂–µ –¥–µ–ª–∞—Ç—å, –≤–æ–π–Ω–∞ –µ—Å—Ç—å –≤–æ–π–Ω–∞,
–ü–æ-–¥—Ä—É–≥–æ–º—É –µ–µ –Ω–µ –Ω–∞–∑–≤–∞—Ç—å.

–ü–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª,
–ü–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª,
–ú—ã –∑–∞—Ç–µ—Ä—è–Ω—ã –≤ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–µ,
–ù–∞—à–µ –≤—Ä–µ–º—è –Ω–∞ —ç—Ç–æ–π –≤–æ–π–Ω–µ.

–ü—Ä–æ—Å—Ç–æ –Ω–µ—á–µ–≥–æ –Ω–∞–º –±–æ–ª—å—à–µ —Ç–µ—Ä—è—Ç—å,
–ü—É—Å—Ç—å —Å–æ–∂–∂–µ–Ω–Ω—ã–µ –æ–≥–Ω–µ–º –≥–æ—Ä–æ–¥–∞.
–ò –æ—Å—Ç–∞–ª–∞—Å—å –≤ —ç—Ç–æ–º –º–∏—Ä–µ –æ–¥–Ω–∞
–í —Ç—Ä–µ—Ö –≤–æ–∫–∑–∞–ª–∞—Ö –∑–µ–º–ª—è –∏ –∑–æ–ª–∞.

–ü–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª,
–ü–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª, –ø–µ—Ä–µ–≤–∞–ª,
–ú—ã –∑–∞—Ç–µ—Ä—è–Ω—ã –≤ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–µ,
–ù–∞—à–µ –≤—Ä–µ–º—è –Ω–∞ —ç—Ç–æ–π –≤–æ–π–Ω–µ.`,
    group: 1,
    rhythm: "–ü–µ—Ä–µ–±–æ—Ä",
    notes: "–ü—Ä–∏–ø–µ–≤ –∏–≥—Ä–∞–µ—Ç—Å—è –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–Ω—ã—Ö —Ç–æ–Ω–∞—Ö"
  }
];

// –ü—Ä–∞–≤–∏–ª–∞ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞
const circleRules = `–ü–†–ê–í–ò–õ–ê –û–†–õ–Ø–¢–°–ö–û–ì–û –ö–†–£–ì–ê

1. –û—Ä–ª—è—Ç—Å–∫–∏–π –∫—Ä—É–≥ - –≤–∞–∂–Ω–∞—è –∑–∞–≤–µ—Ä—à–∞—é—â–∞—è —á–∞—Å—Ç—å –¥–Ω—è/–æ–±—â–µ–π –≤—Å—Ç—Ä–µ—á–∏. –ù–µ –æ–ø–∞–∑–¥—ã–≤–∞–π –Ω–∞ –Ω–µ–≥–æ. –ú—ã —Ç–µ–±—è –∂–¥—ë–º.
2. –ü—É—Å–∫–∞–π –≤ –∫—Ä—É–≥ –∫–∞–∂–¥–æ–≥–æ.
3. –ï—Å–ª–∏ –≤—ã –Ω–µ –ø—É—Å—Ç–∏–ª–∏ –≤ –∫—Ä—É–≥, –≤–∞–º –≤–∞–∂–Ω–æ –ø–æ–¥–æ–π—Ç–∏ –ø–æ—Å–ª–µ –∫—Ä—É–≥–∞ –∏ –æ–±—ä—è—Å–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä–∏—â—É –ø–æ—á–µ–º—É.
4. –ë—É–¥—å –æ–ø—Ä—è—Ç–Ω—ã–º —Å–∞–º –∏ –Ω–∞–ø–æ–º–Ω–∏ –æ–± –æ–ø—Ä—è—Ç–Ω–æ—Å—Ç–∏ –¥—Ä—É–≥–æ–º—É.
5. –í—Å—Ç–∞—ë–º –≤ –∫—Ä—É–≥ –º–∞–ª—å—á–∏–∫-–¥–µ–≤–æ—á–∫–∞ (–ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏)
6. –ö—Ä—É–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫—Ä—É–≥–ª—ã–º. –≠—Ç–æ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ —Å–¥–µ–ª–∞—Ç—å! –ü—Ä–æ—Å—Ç–æ –æ–±–Ω–∏–º–∏ —Ç–æ–≤–∞—Ä–∏—â–µ–π —Å–±–æ–∫—É –∏ –æ—Ç—Ö–æ–¥–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –Ω–∞–∑–∞–¥ (–±–µ–∑ —Ä–∞–∑—Ä—ã–≤–∞–Ω–∏—è –∫—Ä—É–≥–∞. –ü–æ—Å–º–æ—Ç—Ä–∏ –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º. –¢—ã –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å –ª–∏—Ü–æ –∫–∞–∂–¥–æ–≥–æ.
7. –ü–æ–∫–∞—á–∏–≤–∞–µ–º—Å—è –≤ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é –æ—Ç –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã —Å—Ç–æ—Ä–æ–Ω—É. –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Ç–µ–º–ø –∑–∞–¥–∞—ë—Ç –î–ö–°/–î–ö–ó/–ö–æ–º–∞–Ω–¥–∏—Ä
8. –ï—Å–ª–∏ –ø–µ—Å–Ω—é –∑–∞–ø–µ–ª –∏ –ø–æ—ë—Ç –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫, —Ç–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º. –ù–µ –±–æ–π—Å—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∏ –µ–≥–æ, –µ—Å–ª–∏ –∑–Ω–∞–µ—à—å —á–∞—Å—Ç—å —Å–ª–æ–≤!
8. –û—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ–º—Å—è –ø–æ –ø–µ–Ω–∏—é –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞ —Å –≥–∏—Ç–∞—Ä–æ–π.
9. –ï—Å–ª–∏ —Å–ª—É—á–∏–ª–æ—Å—å —Ç–∞–∫, —á—Ç–æ –¥–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞/–¥–≤–µ —á–∞—Å—Ç–∏ –∫—Ä—É–≥–∞ –∑–∞–ø–µ–ª–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, —Ç–æ –æ–±–∞/–æ–±–µ –¥–æ–ª–∂–Ω—ã –∑–∞–º–æ–ª—á–∞—Ç—å –∏ —É—Å—Ç—É–ø–∏—Ç—å –≤—Ä–µ–º—è —Ç—Ä–µ—Ç—å–µ–π –ø–µ—Å–Ω–µ.
10. –ù–µ –ø–µ—Ä–µ—Å–µ–∫–∞–π –∫—Ä—É–≥ –±–µ–∑ –æ—Å—Ç—Ä–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
–ï—Å–ª–∏ –∫—Ä—É–≥ –Ω–µ —Å–æ–º–∫–Ω—É—Ç , —Ç–æ –µ–≥–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Å–µ—á—å.
11. –£–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–Ω–æ—Å–∏—Å—å –∫ –ø–µ—Å–Ω–µ –∏ –æ–Ω–∞ –¥–∞—Å—Ç —Ç–µ–±–µ —Å–∏–ª.
12. –ü–æ—Å–ª–µ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞ –Ω–µ –ø–æ—ë–º –æ—Ä–ª—è—Ç—Å–∫–∏–µ –ø–µ—Å–Ω–∏ –∏ —Å—Ç–∞—Ä–∞–µ–º—Å—è –Ω–µ —à—É–º–µ—Ç—å.
13. –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–±–∏–≤–∞—Ç—å –∑–∞–≤–µ—Ä—à–∞—é—â—É—é –ø–µ—Å–Ω—é 
14. –ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–π –æ—Ä–ª—è—Ç—Å–∫–∏–µ –∫—Ä—É–≥–∏.

–ë—É–¥—å –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–º –∏ –ø–æ–º–Ω–∏ –æ –∑–¥—Ä–∞–≤–æ–º —Å–º—ã—Å–ª–µ. 
–° üß° –ø–µ—Å–µ–Ω–Ω–∞—è —Å–ª—É–∂–±–∞.`;

// URL –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ rules_img.jpeg)
const circleRulesImageUrl = 'https://gosha-bot.vercel.app/api/img/rules_img.jpeg';

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async function sendMessage(chatId, text, options = {}) {
  const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
  const payload = {
    chat_id: chatId,
    text: text,
    parse_mode: options.parse_mode || 'HTML',
    ...options
  };
  
  try {
    const response = await axios.post(url, payload);
    return response.data;
  } catch (error) {
    console.error('Error sending message:', error);
    return null;
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
async function sendPhoto(chatId, photoUrl, caption, options = {}) {
  const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendPhoto`;
  const payload = {
    chat_id: chatId,
    photo: photoUrl,
    caption: caption,
    parse_mode: options.parse_mode || 'HTML',
    ...options
  };
  
  try {
    const response = await axios.post(url, payload);
    return response.data;
  } catch (error) {
    console.error('Error sending photo:', error);
    return null;
  }
}

// –ü–æ–∏—Å–∫ –ø–µ—Å–Ω–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∞–≤—Ç–æ—Ä—É
function findSong(query) {
  query = query.toLowerCase();
  
  return songbook.filter(song => {
    return song.title.toLowerCase().includes(query) || 
           (song.author && song.author.toLowerCase().includes(query)) ||
           song.lyrics.toLowerCase().includes(query);
  });
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
function formatSong(song) {
  let formattedSong = `<b>${song.title}</b>`;
  
  if (song.author) {
    formattedSong += `\n<i>–ê–≤—Ç–æ—Ä: ${song.author}</i>`;
  }
  
  if (song.rhythm) {
    formattedSong += `\n<i>–†–∏—Ç–º: ${song.rhythm}</i>`;
  }
  
  if (song.notes) {
    formattedSong += `\n<i>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: ${song.notes}</i>`;
  }
  
  formattedSong += `\n\n<pre>${song.lyrics}</pre>`;
  
  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
  formattedSong += `\n\n<a href="${SONGBOOK_URL}">–û—Ç–∫—Ä—ã—Ç—å –ø–æ–ª–Ω—ã–π –∞–∫–∫–æ—Ä–¥–Ω–∏–∫</a>`;
  
  return formattedSong;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–π –ø–µ—Å–Ω–∏, –∫–æ—Ç–æ—Ä—É—é –¥–∞–≤–Ω–æ –Ω–µ –ø–µ–ª–∏
function getRandomUnusedSong() {
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Å–Ω–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ (—Å–Ω–∞—á–∞–ª–∞ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞–≤–Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å)
  const sortedSongs = [...songbook].sort((a, b) => {
    const timeA = lastSongRequests[a.title] || 0;
    const timeB = lastSongRequests[b.title] || 0;
    return timeA - timeB;
  });
  
  // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —Ç—Ä–µ—Ç—å —Å–ø–∏—Å–∫–∞ (—Å–∞–º—ã–µ —Ä–µ–¥–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ)
  const unusedSongs = sortedSongs.slice(0, Math.max(1, Math.floor(sortedSongs.length / 3)));
  
  // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø–µ—Å–Ω—é –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞
  const randomIndex = Math.floor(Math.random() * unusedSongs.length);
  const song = unusedSongs[randomIndex];
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —ç—Ç–æ–π –ø–µ—Å–Ω–∏
  lastSongRequests[song.title] = Date.now();
  
  return song;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–µ—Å–µ–Ω
function getSongsStatistics() {
  const songEntries = Object.entries(songsStats).sort((a, b) => b[1] - a[1]);
  
  if (songEntries.length === 0) {
    return "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ —Å–æ–±—Ä–∞–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /chords –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–µ—Å–µ–Ω.";
  }
  
  let statsMessage = "<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–µ—Å–µ–Ω:</b>\n\n";
  
  songEntries.forEach(([title, count], index) => {
    statsMessage += `${index + 1}. ${title}: ${count} ${count === 1 ? '–∑–∞–ø—Ä–æ—Å' : '–∑–∞–ø—Ä–æ—Å–æ–≤'}\n`;
  });
  
  return statsMessage;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–µ—Å–µ–Ω
function getSongsList() {
  let listMessage = "<b>–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –≤ –∞–∫–∫–æ—Ä–¥–Ω–∏–∫–µ:</b>\n\n";
  
  songbook.forEach((song, index) => {
    listMessage += `${index + 1}. ${song.title}`;
    if (song.author) {
      listMessage += ` - ${song.author}`;
    }
    listMessage += '\n';
  });
  
  return listMessage;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
async function handleCommand(message) {
  const chatId = message.chat.id;
  const text = message.text;
  
  // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
  const [command, ...args] = text.split(' ');
  const query = args.join(' ');
  
  switch(command) {
    case '/start':
      await sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç! –Ø –ì–æ—à–∞, –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ —Å –∞–∫–∫–æ—Ä–¥–∞–º–∏ –∏ –ø–µ—Å–Ω—è–º–∏. 
      
–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é.`);
      break;
      
    case '/help':
      await sendMessage(chatId, `<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>

/chords [–∑–∞–ø—Ä–æ—Å] - –ø–æ–∏—Å–∫ –ø–µ—Å–Ω–∏ –≤ –∞–∫–∫–æ—Ä–¥–Ω–∏–∫–µ
/list - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–µ—Å–µ–Ω
/circlerules - –ø—Ä–∞–≤–∏–ª–∞ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞
/status - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–µ—Å–µ–Ω
/random - –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –ø–µ—Å–Ω—é, –∫–æ—Ç–æ—Ä—É—é –¥–∞–≤–Ω–æ –Ω–µ –ø–µ–ª–∏

–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–µ—Å–Ω—é, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /chords –∏ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –∏–ª–∏ –∞–≤—Ç–æ—Ä–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä:
/chords –∞—Ç–ª–∞–Ω—Ç—ã
/chords –≤–∏–∑–±–æ—Ä
/chords –ø–µ—Ä–µ–≤–∞–ª`);
      break;
      
    case '/chords':
      if (!query) {
        await sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏–ª–∏ –∞–≤—Ç–æ—Ä–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /chords");
        return;
      }
      
      const songs = findSong(query);
      
      if (songs.length === 0) {
        await sendMessage(chatId, `–ü–æ –∑–∞–ø—Ä–æ—Å—É "${query}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /list –¥–ª—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–µ—Å–µ–Ω.`);
        return;
      }
      
      if (songs.length === 1) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        songsStats[songs[0].title] = (songsStats[songs[0].title] || 0) + 1;
        lastSongRequests[songs[0].title] = Date.now();
        
        await sendMessage(chatId, formatSong(songs[0]));
      } else if (songs.length <= 5) {
        let songButtons = songs.map(song => [{
          text: song.title + (song.author ? ` (${song.author})` : ''),
          callback_data: `song:${song.title}`
        }]);
        
        await sendMessage(chatId, `–ù–∞–π–¥–µ–Ω–æ ${songs.length} –ø–µ—Å–µ–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É "${query}". –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Å–Ω—é:`, {
          reply_markup: JSON.stringify({
            inline_keyboard: songButtons
          })
        });
      } else {
        await sendMessage(chatId, `–ù–∞–π–¥–µ–Ω–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–µ—Å–µ–Ω (${songs.length}). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å.`);
      }
      break;
      
    case '/circlerules':
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ —Ç–µ–∫—Å—Ç
      await sendPhoto(chatId, circleRulesImageUrl, circleRules);
      break;
      
    case '/status':
      await sendMessage(chatId, getSongsStatistics());
      break;
      
    case '/list':
      await sendMessage(chatId, getSongsList());
      break;
      
    case '/random':
      const randomSong = getRandomUnusedSong();
      await sendMessage(chatId, `–í–æ—Ç –ø–µ—Å–Ω—è, –∫–æ—Ç–æ—Ä—É—é –¥–∞–≤–Ω–æ –Ω–µ –ø–µ–ª–∏:\n\n${formatSong(randomSong)}`);
      break;
      
    default:
      // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
      break;
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–ª—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫)
async function handleCallback(callbackQuery) {
  const chatId = callbackQuery.message.chat.id;
  const messageId = callbackQuery.message.message_id;
  const data = callbackQuery.data;
  
  if (data.startsWith('song:')) {
    const songTitle = data.substring(5);
    const song = songbook.find(s => s.title === songTitle);
    
    if (song) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      songsStats[song.title] = (songsStats[song.title] || 0) + 1;
      lastSongRequests[song.title] = Date.now();
      
      await sendMessage(chatId, formatSong(song));
    } else {
      await sendMessage(chatId, `–ü–µ—Å–Ω—è "${songTitle}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`);
    }
  }
  
  // –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram, —á—Ç–æ callback –æ–±—Ä–∞–±–æ—Ç–∞–Ω
  try {
    await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/answerCallbackQuery`, {
      callback_query_id: callbackQuery.id
    });
  } catch (error) {
    console.error('Error answering callback query:', error);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ —è–≤–ª—è—é—â–∏—Ö—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏
async function handleNonCommandMessage(message) {
  const chatId = message.chat.id;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
  if (message.photo) {
    // –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ —Ñ–æ—Ç–æ
    await sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ! –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –∞–∫–∫–æ—Ä–¥—ã –∫ –ø–µ—Å–Ω–µ, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /chords [–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏]");
  } else if (message.voice) {
    // –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await sendMessage(chatId, "–í–º–µ—Å—Ç–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ª—É—á—à–µ —Å–ø–æ–π—Ç–µ –ø–µ—Å–Ω—é –≤–∂–∏–≤—É—é! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /random, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –ø–µ—Å–Ω—é");
  } else if (message.video) {
    // –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ –≤–∏–¥–µ–æ
    await sendMessage(chatId, "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –≤–∏–¥–µ–æ! –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∏–ª–∞ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /circlerules");
  } else if (message.audio || message.document) {
    // –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ –∞—É–¥–∏–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç
    await sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–∞–π–ª! –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –ø–µ—Å–Ω—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø–æ–∏—Å–∫–æ–º —á–µ—Ä–µ–∑ /chords [–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏]");
  } else if (message.text) {
    // –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç (–Ω–µ –∫–æ–º–∞–Ω–¥—É)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –ø–µ—Å–Ω–∏ –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã
    const songs = findSong(message.text);
    
    if (songs.length === 1) {
      // –ù–∞—à–ª–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
      songsStats[songs[0].title] = (songsStats[songs[0].title] || 0) + 1;
      lastSongRequests[songs[0].title] = Date.now();
      
      await sendMessage(chatId, formatSong(songs[0]));
    } else if (songs.length > 1 && songs.length <= 5) {
      // –ù–∞—à–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
      let songButtons = songs.map(song => [{
        text: song.title + (song.author ? ` (${song.author})` : ''),
        callback_data: `song:${song.title}`
      }]);
      
      await sendMessage(chatId, `–ù–∞—à–µ–ª ${songs.length} –ø–µ—Å–µ–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É "${message.text}". –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Å–Ω—é:`, {
        reply_markup: JSON.stringify({
          inline_keyboard: songButtons
        })
      });
    } else {
      // –û—Ç–≤–µ—á–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–π —Ñ—Ä–∞–∑–æ–π
      const responses = [
        "–Ø –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç–µ –≤ –≤–∏–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.",
        "–î–ª—è –ø–æ–∏—Å–∫–∞ –ø–µ—Å–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /chords –∏ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –∏–ª–∏ –∞–≤—Ç–æ—Ä–∞.",
        "–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –ø–µ—Å–Ω—é? –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /random!",
        "–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∏–ª–∞ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞, –≤–≤–µ–¥–∏—Ç–µ /circlerules",
        "–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–µ—Å–µ–Ω, –≤–≤–µ–¥–∏—Ç–µ /list"
      ];
      
      const randomResponse = responses[Math.floor(Math.random() * responses.length)];
      await sendMessage(chatId, randomResponse);
    }
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
module.exports = async (req, res) => {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞
  if (req.method === 'GET') {
    // –î–ª—è GET-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    res.status(200).send(`Bot ${BOT_NAME} is running!`);
    return;
  }
  
  // –î–ª—è POST-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram
  if (req.method === 'POST') {
    const update = req.body;
    
    if (update.callback_query) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ (–∫–Ω–æ–ø–∫–∏)
      await handleCallback(update.callback_query);
    } else if (update.message) {
      if (update.message.text && update.message.text.startsWith('/')) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ (—Ç–µ–∫—Å—Ç, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å /)
        await handleCommand(update.message);
      } else {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        await handleNonCommandMessage(update.message);
      }
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    res.status(200).send('OK');
    return;
  }
  
  // –î–ª—è –¥—Ä—É–≥–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É
  res.status(405).send('Method Not Allowed');
}; 