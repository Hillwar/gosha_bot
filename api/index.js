/**
 * Gosha Bot - Telegram –±–æ—Ç –¥–ª—è –ø–µ—Å–µ–Ω —Å –∞–∫–∫–æ—Ä–¥–∞–º–∏
 */
require('dotenv').config();
const { Telegraf } = require('telegraf');
const { google } = require('googleapis');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ Telegram
const bot = new Telegraf(process.env.BOT_TOKEN);

// –ö—ç—à –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –ø–µ—Å–µ–Ω –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
const cache = {
  songs: [],
  rules: '',
  lastUpdate: null,
  updateInterval: 30 * 60 * 1000 // 30 –º–∏–Ω—É—Ç
};

// –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userStates = {};

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
const STATES = {
  DEFAULT: 'default',        // –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º - –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø–æ–∏—Å–∫
  AWAITING_SELECTION: 'awaiting_selection',  // –û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Å–Ω–∏
  AWAITING_SEARCH_QUERY: 'awaiting_search_query' // –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
};

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–±–æ—Ä –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ –∑–∞–≥—Ä—É–∑–∫–µ
const loadingAnimations = [
  "üîç –ò—â—É... ‚è≥",
  "üîç –ò—â—É... ‚åõ",
  "üîç –ò—â—É... ‚è≥",
  "üîç –ò—â—É... ‚åõ"
];

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
async function animateLoading(ctx, initialMessage, animationTexts, duration = 5000) {
  let currentIndex = 0;
  let loadingMsg;
  
  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    loadingMsg = await ctx.reply(initialMessage || animationTexts[0]);
    
    // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –∏ ID —á–∞—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    const messageId = loadingMsg.message_id;
    const chatId = ctx.chat.id;
    
    const intervalId = setInterval(async () => {
      currentIndex = (currentIndex + 1) % animationTexts.length;
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (chatId && messageId) {
          await ctx.telegram.editMessageText(
            chatId, 
            messageId, 
            null, 
            animationTexts[currentIndex]
          );
        }
      } catch (e) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏:', e.message);
        clearInterval(intervalId); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ
      }
    }, 500);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ ID —Å–æ–æ–±—â–µ–Ω–∏—è
    return {
      stop: async () => {
        clearInterval(intervalId);
        return loadingMsg ? loadingMsg.message_id : null;
      },
      messageId: loadingMsg ? loadingMsg.message_id : null,
      chatId: ctx.chat.id
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏:', error);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –∑–Ω–∞—á–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –ø—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
    return {
      stop: async () => null,
      messageId: null,
      chatId: ctx.chat.id
    };
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserState(userId) {
  // –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª–æ (–±–æ–ª–µ–µ 10 –º–∏–Ω—É—Ç), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º DEFAULT
  const userState = userStates[userId];
  console.log(`–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, userState);
  if (!userState || Date.now() - userState.timestamp > 10 * 60 * 1000) {
    return { state: STATES.DEFAULT, data: {}, timestamp: 0 };
  }
  return userState;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function setUserState(userId, state, data = {}) {
  // –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º DEFAULT, –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
  if (state === STATES.DEFAULT) {
    console.log(`–£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    delete userStates[userId];
    return;
  }
  
  // –ò–Ω–∞—á–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  userStates[userId] = {
    state,
    timestamp: Date.now(),
    data: { ...data }
  };
  console.log(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, state, data);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
function cleanCommandText(text, command) {
  // –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, /search) –∏ –ª—é–±–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, @gosha_demo_bot)
  return text.replace(new RegExp(`^/${command}(@\\w+)?`, 'i'), '').trim();
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.command('start', (ctx) => {
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ DEFAULT
  setUserState(ctx.from.id, STATES.DEFAULT);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º cleanCommandText –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã
  const query = cleanCommandText(ctx.message.text, 'start');
  
  ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–µ—Å–µ–Ω –≤ –∞–∫–∫–æ—Ä–¥–Ω–∏–∫–µ. –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.');
});

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.command('help', (ctx) => {
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ DEFAULT
  setUserState(ctx.from.id, STATES.DEFAULT);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º cleanCommandText –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã
  const query = cleanCommandText(ctx.message.text, 'help');
  
  ctx.reply(
    '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
    '/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n' +
    '/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\n' +
    '/search - –ü–æ–∏—Å–∫ –ø–µ—Å–Ω–∏ –≤ –∞–∫–∫–æ—Ä–¥–Ω–∏–∫–µ\n' +
    '/list - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–µ—Å–µ–Ω\n' +
    '/circlerules - –ü—Ä–∞–≤–∏–ª–∞ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞\n' +
    '/random - –°–ª—É—á–∞–π–Ω–∞—è –ø–µ—Å–Ω—è'
  );
});

// –ö–æ–º–∞–Ω–¥–∞ /search
bot.command('search', async (ctx) => {
  console.log('–í—ã–∑–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /search –≤ —á–∞—Ç–µ:', ctx.chat.type, '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', ctx.from.id);
  
  // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –∫–æ–º–∞–Ω–¥—ã –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞
  const query = cleanCommandText(ctx.message.text, 'search');
  console.log('–û—á–∏—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∏–∑ –∫–æ–º–∞–Ω–¥—ã /search:', query);
  
  if (query) {
    // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É–∂–µ –µ—Å—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ —Å—Ä–∞–∑—É
    await performSearch(ctx, query);
  } else {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –∫–æ–º–∞–Ω–¥–µ
    setUserState(ctx.from.id, STATES.AWAITING_SEARCH_QUERY, {
      chatId: ctx.chat.id,
      timestamp: Date.now()
    });
    
    // –ò–Ω–∞—á–µ –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏–ª–∏ —á–∞—Å—Ç—å –µ—ë —Ç–µ–∫—Å—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏');
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /list
bot.command('list', async (ctx) => {
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ DEFAULT
  setUserState(ctx.from.id, STATES.DEFAULT);
  
  const animation = await animateLoading(
    ctx, 
    "üîç –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω... ‚è≥", 
    ["üîç –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω... ‚è≥", "üîç –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω... ‚åõ", "üîç –°–æ–±–∏—Ä–∞—é –ø–µ—Å–Ω–∏... ‚è≥", "üîç –°–æ–±–∏—Ä–∞—é –ø–µ—Å–Ω–∏... ‚åõ"]
  );
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º cleanCommandText –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã, —Ö–æ—Ç—è —Ç—É—Ç –º—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è,
  // –¥–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
  const query = cleanCommandText(ctx.message.text, 'list');
  
  try {
    const songs = await getSongs();
    if (!songs || songs.length === 0) {
      if (animation.messageId) {
        try {
          await ctx.telegram.editMessageText(
            animation.chatId, 
            animation.messageId, 
            null, 
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
          );
        } catch (e) {
          // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }
      } else {
        await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      }
      return;
    }
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    await animation.stop();
    
    // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    try {
      if (animation.messageId) {
        await ctx.telegram.deleteMessage(animation.chatId, animation.messageId);
      }
    } catch (e) {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏:', e.message);
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω
    let message = '–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –≤ –∞–∫–∫–æ—Ä–¥–Ω–∏–∫–µ üìñ:\n\n';
    songs.forEach((song, index) => {
      message += `${index + 1}. ${song.title}\n`;
    });
    
    // –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
    if (message.length > 4000) {
      const chunks = message.match(/.{1,4000}/gs);
      for (const chunk of chunks) {
        await ctx.reply(chunk);
      }
    } else {
      await ctx.reply(message);
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–µ—Å–µ–Ω:', error);
    
    try {
      if (animation.messageId) {
        await ctx.telegram.editMessageText(
          animation.chatId, 
          animation.messageId, 
          null, 
          "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        );
      } else {
        await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      }
    } catch (e) {
      // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /random
bot.command('random', async (ctx) => {
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ DEFAULT
  setUserState(ctx.from.id, STATES.DEFAULT);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º cleanCommandText –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã, —Ö–æ—Ç—è —Ç—É—Ç –º—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è,
  // –¥–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
  const query = cleanCommandText(ctx.message.text, 'random');
  
  const animation = await animateLoading(
    ctx, 
    "üé≤ –í—ã–±–∏—Ä–∞—é —Å–ª—É—á–∞–π–Ω—É—é –ø–µ—Å–Ω—é... ‚è≥", 
    ["üé≤ –í—ã–±–∏—Ä–∞—é —Å–ª—É—á–∞–π–Ω—É—é –ø–µ—Å–Ω—é... ‚è≥", "üé≤ –í—ã–±–∏—Ä–∞—é —Å–ª—É—á–∞–π–Ω—É—é –ø–µ—Å–Ω—é... ‚åõ", "üé≤ –ü–æ–¥–±–∏—Ä–∞—é —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ... ‚è≥", "üé≤ –ü–æ–¥–±–∏—Ä–∞—é —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ... ‚åõ"]
  );
  
  try {
    const songs = await getSongs();
    if (!songs || songs.length === 0) {
      if (animation.messageId) {
        try {
          await ctx.telegram.editMessageText(
            animation.chatId, 
            animation.messageId, 
            null, 
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
          );
        } catch (e) {
          await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }
      } else {
        await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      }
      return;
    }
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    await animation.stop();
    
    // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    try {
      if (animation.messageId) {
        await ctx.telegram.deleteMessage(animation.chatId, animation.messageId);
      }
    } catch (e) {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏:', e.message);
    }
    
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø–µ—Å–Ω—é
    const randomIndex = Math.floor(Math.random() * songs.length);
    const song = songs[randomIndex];
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Å–Ω—é —Å HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    await ctx.reply(`üéµ –°–ª—É—á–∞–π–Ω–∞—è –ø–µ—Å–Ω—è:\n\n${formatSongForDisplay(song)}`, { 
      parse_mode: 'HTML'
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞–∫–∫–æ—Ä–¥–Ω–∏–∫
    await ctx.reply(`<a href="${process.env.SONGBOOK_URL}">–û—Ç–∫—Ä—ã—Ç—å –∞–∫–∫–æ—Ä–¥–Ω–∏–∫</a>`, { 
      parse_mode: 'HTML',
      disable_web_page_preview: true
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–π –ø–µ—Å–Ω–∏:', error);
    try {
      if (animation.messageId) {
        await ctx.telegram.editMessageText(
          animation.chatId, 
          animation.messageId, 
          null, 
          "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        );
      } else {
        await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      }
    } catch (e) {
      await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /circlerules
bot.command('circlerules', async (ctx) => {
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ DEFAULT
  setUserState(ctx.from.id, STATES.DEFAULT);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º cleanCommandText –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã, —Ö–æ—Ç—è —Ç—É—Ç –º—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è,
  // –¥–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
  const query = cleanCommandText(ctx.message.text, 'circlerules');
  
  const animation = await animateLoading(
    ctx, 
    "üìú –ó–∞–≥—Ä—É–∂–∞—é –ø—Ä–∞–≤–∏–ª–∞ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞... ‚è≥", 
    ["üìú –ó–∞–≥—Ä—É–∂–∞—é –ø—Ä–∞–≤–∏–ª–∞ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞... ‚è≥", "üìú –ó–∞–≥—Ä—É–∂–∞—é –ø—Ä–∞–≤–∏–ª–∞ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞... ‚åõ", "üìú –ò—â—É –ø—Ä–∞–≤–∏–ª–∞... ‚è≥", "üìú –ò—â—É –ø—Ä–∞–≤–∏–ª–∞... ‚åõ"]
  );
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞
    const rules = await getRules();
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    await animation.stop();
    
    // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    try {
      if (animation.messageId) {
        await ctx.telegram.deleteMessage(animation.chatId, animation.messageId);
      }
    } catch (e) {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏:', e.message);
    }
    
    if (!rules) {
      await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ.');
      return;
    }
    
    await ctx.reply('üìú –ü—Ä–∞–≤–∏–ª–∞ –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞:\n\n' + rules);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª:', error);
    try {
      if (animation.messageId) {
        await ctx.telegram.editMessageText(
          animation.chatId, 
          animation.messageId, 
          null, 
          "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        );
      } else {
        await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      }
    } catch (e) {
      await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback_query –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Å–Ω–∏
bot.on('callback_query', async (ctx) => {
  try {
    const callbackData = ctx.callbackQuery.data;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ callbackData —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É –≤—ã–±–æ—Ä–∞ –ø–µ—Å–Ω–∏
    if (callbackData.startsWith('song_')) {
      // –§–æ—Ä–º–∞—Ç: song_INDEX_QUERY
      const parts = callbackData.split('_');
      const index = parseInt(parts[1]);
      const query = parts.slice(2).join('_');
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram –æ —Ç–æ–º, —á—Ç–æ –º—ã –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ callback_query
      await ctx.answerCbQuery();
      
      // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–æ–ª—å—à–µ –Ω–µ –∂–¥–µ–º –≤—ã–±–æ—Ä–∞)
      setUserState(ctx.from.id, STATES.DEFAULT);
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Å–Ω–∏ –∏–∑ –∫–µ—à–∞ –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–Ω–æ–≤–æ
      const songs = await getSongs();
      
      // –ò—â–µ–º –ø–µ—Å–Ω–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É
      const matchedSongs = songs.filter(song => 
        song.title.toLowerCase().includes(query.toLowerCase()) ||
        (song.author && song.author.toLowerCase().includes(query.toLowerCase())) ||
        song.fullText.toLowerCase().includes(query.toLowerCase())
      );
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–Ω–¥–µ–∫—Å –≤–∞–ª–∏–¥–Ω—ã–π
      if (index >= 0 && index < matchedSongs.length) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–µ—Å–Ω—é
        await ctx.reply(`üéµ –í—ã–±—Ä–∞–Ω–∞ –ø–µ—Å–Ω—è:\n\n${formatSongForDisplay(matchedSongs[index])}`, {
          parse_mode: 'HTML'
        });
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞–∫–∫–æ—Ä–¥–Ω–∏–∫
        await ctx.reply(`<a href="${process.env.SONGBOOK_URL}">–û—Ç–∫—Ä—ã—Ç—å –∞–∫–∫–æ—Ä–¥–Ω–∏–∫</a>`, { 
          parse_mode: 'HTML',
          disable_web_page_preview: true
        });
      } else {
        await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–µ—Å–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫ –∑–∞–Ω–æ–≤–æ.');
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Å–Ω–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π
function isCommand(text) {
  return text.startsWith('/');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx) => {
  console.log('–ü–æ–ª—É—á–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ:', ctx.chat.type, '–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id, '—Å —Ç–µ–∫—Å—Ç–æ–º:', ctx.message.text);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '/')
  if (isCommand(ctx.message.text)) {
    console.log('–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ –∫–∞–∫ –∫–æ–º–∞–Ω–¥–∞');
    // –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞, –µ—ë –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    return;
  }
  
  const userId = ctx.from.id;
  const userState = getUserState(userId);
  console.log('–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userState);
  
  // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —É—Å—Ç–∞—Ä–µ–ª–æ
  const currentTimestamp = Date.now();
  const stateDuration = userState.data.timestamp ? currentTimestamp - userState.data.timestamp : 0;
  console.log(`–í—Ä–µ–º—è —Å –º–æ–º–µ–Ω—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è: ${stateDuration}–º—Å`);
  
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞, –ø—Ä–æ–±—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –Ω–æ–º–µ—Ä –ø–µ—Å–Ω–∏
  if (userState.state === STATES.AWAITING_SELECTION) {
    console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–µ—Å–Ω–∏');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å—Ç—É–ø–∏–ª–æ –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç, –≥–¥–µ –±—ã–ª–∞ –∫–æ–º–∞–Ω–¥–∞ /search
    if (userState.data.chatId && userState.data.chatId !== ctx.chat.id) {
      console.log('–ß–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —á–∞—Ç–æ–º –≤—ã–±–æ—Ä–∞ –ø–µ—Å–Ω–∏');
      return; // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Ç–∞—Ö
    }
    
    // –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä –ø–µ—Å–Ω–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞
    let songIndex = parseInt(ctx.message.text.trim()) - 1; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –Ω–æ–º–µ—Ä —Å 1, –∞ –Ω–µ —Å 0
    
    console.log(`–ò–∑–≤–ª–µ—á–µ–Ω –Ω–æ–º–µ—Ä –ø–µ—Å–Ω–∏: ${songIndex + 1}, –≤—Å–µ–≥–æ –ø–µ—Å–µ–Ω: ${userState.data.matchedSongs ? userState.data.matchedSongs.length : 0}`);
    
    if (!isNaN(songIndex) && songIndex >= 0 && userState.data.matchedSongs && songIndex < userState.data.matchedSongs.length) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç
      setUserState(userId, STATES.DEFAULT);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–µ—Å–Ω—é
      await ctx.reply(`üéµ –í—ã–±—Ä–∞–Ω–∞ –ø–µ—Å–Ω—è:\n\n${formatSongForDisplay(userState.data.matchedSongs[songIndex])}`, {
        parse_mode: 'HTML'
      });
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞–∫–∫–æ—Ä–¥–Ω–∏–∫
      await ctx.reply(`<a href="${process.env.SONGBOOK_URL}">–û—Ç–∫—Ä—ã—Ç—å –∞–∫–∫–æ—Ä–¥–Ω–∏–∫</a>`, { 
        parse_mode: 'HTML',
        disable_web_page_preview: true
      });
      
      return;
    } else {
      // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–æ–º–µ—Ä –ø–µ—Å–Ω–∏ –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
      console.log('–í–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –ø–µ—Å–Ω–∏, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ');
      setUserState(userId, STATES.DEFAULT);
      await ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø–µ—Å–Ω–∏. –ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /search –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞.');
      return;
    }
  }
  
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
  // –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –≤ –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö, —Ç–∞–∫ –∏ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö
  if (userState.state === STATES.AWAITING_SEARCH_QUERY) {
    console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –¥–ª—è:', ctx.message.text);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å—Ç—É–ø–∏–ª–æ –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç, –≥–¥–µ –±—ã–ª–∞ –∫–æ–º–∞–Ω–¥–∞ /search
    if (userState.data.chatId && userState.data.chatId !== ctx.chat.id) {
      console.log('–ß–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —á–∞—Ç–æ–º –∫–æ–º–∞–Ω–¥—ã /search');
      return; // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Ç–∞—Ö
    }
    
    // –í–ê–ñ–ù–û: –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –ø–æ—Ç–æ–º –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
    // –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —ç—Ç–æ–≥–æ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    setUserState(userId, STATES.DEFAULT);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É
    await performSearch(ctx, ctx.message.text);
    return;
  }
  
  // –î–∞–ª—å—à–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–∏—á–Ω—ã–µ —á–∞—Ç—ã
  if (ctx.chat.type === 'group' || ctx.chat.type === 'supergroup') {
    console.log('–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–∂–∏–¥–∞–Ω–∏—è');
    return; // –í –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  }
  
  // –í –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö –¥–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
  console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ');
  await ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /search –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–µ—Å–µ–Ω.');
});

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–µ—Å–Ω–∏
async function performSearch(ctx, query) {
  console.log('–ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º:', query);
  
  const animation = await animateLoading(
    ctx, 
    `üîç –ò—â—É –ø–µ—Å–Ω—é "${query}"... ‚è≥`, 
    [`üîç –ò—â—É –ø–µ—Å–Ω—é "${query}"... ‚è≥`, `üîç –ò—â—É –ø–µ—Å–Ω—é "${query}"... ‚åõ`, `üîç –ò—â—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è... ‚è≥`, `üîç –ò—â—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è... ‚åõ`]
  );
  
  try {
    const songs = await getSongs();
    console.log(`–ü–æ–ª—É—á–µ–Ω–æ ${songs ? songs.length : 0} –ø–µ—Å–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö`);
    
    if (!songs || songs.length === 0) {
      console.log('–ü–µ—Å–Ω–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      if (animation.messageId) {
        try {
          await ctx.telegram.editMessageText(
            animation.chatId, 
            animation.messageId, 
            null, 
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
          );
        } catch (e) {
          await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }
      } else {
        await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      }
      return;
    }
    
    // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –∞–≤—Ç–æ—Ä—É
    const matchedSongs = songs.filter(song => 
      song.title.toLowerCase().includes(query.toLowerCase()) ||
      (song.author && song.author.toLowerCase().includes(query.toLowerCase())) ||
      song.fullText.toLowerCase().includes(query.toLowerCase())
    );
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${matchedSongs.length} –ø–µ—Å–µ–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É "${query}"`);
    if (matchedSongs.length > 0) {
      // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤—ã–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–µ—Å–µ–Ω
      matchedSongs.forEach((song, index) => {
        console.log(`–ü–µ—Å–Ω—è ${index + 1}: ${song.title}`);
      });
    }
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    await animation.stop();
    
    // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    try {
      if (animation.messageId) {
        await ctx.telegram.deleteMessage(animation.chatId, animation.messageId);
      }
    } catch (e) {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏:', e.message);
    }
    
    if (matchedSongs.length === 0) {
      console.log(`–ü–µ—Å–Ω—è "${query}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`);
      await ctx.reply(`‚ùå –ü–µ—Å–Ω—è "${query}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`);
    } else if (matchedSongs.length === 1) {
      // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –æ–¥–Ω—É –ø–µ—Å–Ω—é, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—ë —Å HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
      console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –ø–µ—Å–Ω—é: ${matchedSongs[0].title}`);
      await ctx.reply(`üéµ –ù–∞–π–¥–µ–Ω–∞ –ø–µ—Å–Ω—è:\n\n${formatSongForDisplay(matchedSongs[0])}`, {
        parse_mode: 'HTML'
      });
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞–∫–∫–æ—Ä–¥–Ω–∏–∫
      await ctx.reply(`<a href="${process.env.SONGBOOK_URL}">–û—Ç–∫—Ä—ã—Ç—å –∞–∫–∫–æ—Ä–¥–Ω–∏–∫</a>`, { 
        parse_mode: 'HTML',
        disable_web_page_preview: true
      });
      
    } else if (matchedSongs.length <= 10) {
      // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Å–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
      console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ ${matchedSongs.length} –ø–µ—Å–µ–Ω —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞`);
      let message = `üéµ –ù–∞–π–¥–µ–Ω–æ ${matchedSongs.length} –ø–µ—Å–µ–Ω —Å "${query}":\n\n`;
      
      matchedSongs.forEach((song, index) => {
        message += `${index + 1}. ${song.title}${song.author ? ' - ' + song.author : ''}\n`;
      });
      
      // –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Å–Ω–∏
      const inlineKeyboard = [];
      
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 5 –≤ —Ä—è–¥
      const buttonsPerRow = 5;
      for (let i = 0; i < matchedSongs.length; i += buttonsPerRow) {
        const row = [];
        for (let j = i; j < Math.min(i + buttonsPerRow, matchedSongs.length); j++) {
          row.push({
            text: (j + 1).toString(),
            callback_data: `song_${j}_${query}`
          });
        }
        inlineKeyboard.push(row);
      }
      
      await ctx.reply(message, {
        reply_markup: {
          inline_keyboard: inlineKeyboard
        }
      });
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –æ–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Å–Ω–∏
      console.log(`–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ ${STATES.AWAITING_SELECTION} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from.id}`);
      setUserState(ctx.from.id, STATES.AWAITING_SELECTION, { 
        matchedSongs, 
        query,
        chatId: ctx.chat.id, 
        timestamp: Date.now() 
      });
      
    } else {
      // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ, –ø—Ä–æ—Å–∏–º —É—Ç–æ—á–Ω–∏—Ç—å
      await ctx.reply(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–µ—Å–µ–Ω (${matchedSongs.length}). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å.`);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–µ—Å–Ω–∏:', error);
    try {
      if (animation.messageId) {
        await ctx.telegram.editMessageText(
          animation.chatId, 
          animation.messageId, 
          null, 
          "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        );
      } else {
        await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      }
    } catch (e) {
      await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–µ—Å–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
  }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
function formatSongForDisplay(song) {
  // –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –Ω–∞ —Å—Ç—Ä–æ–∫–∏
  const lines = song.fullText.split('\n');
  
  // –°—Ç—Ä–æ–∏–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
  let formattedText = 'üé∏ ';
  let titleFound = false;
  let authorFound = false;
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É –ø–µ—Å–Ω–∏
  for (let i = 0; i < lines.length; i++) {
    const line = lines[i];
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º (—Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏–º–≤–æ–ª ‚ô≠)
    if (!titleFound && line.includes('‚ô≠')) {
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±–µ–∑ —Å–∏–º–≤–æ–ª–∞ ‚ô≠ —Å –∫—Ä–∞—Å–∏–≤—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º
      formattedText += `${line.replace('‚ô≠', '').trim()}\n`;
      titleFound = true;
      continue;
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –∞–≤—Ç–æ—Ä–æ–º (—Å–ª–µ–¥—É—é—â–∞—è –ø–æ—Å–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è)
    if (titleFound && !authorFound) {
      const author = line.trim();
      if (author) {
        formattedText += `üë§ ${author}\n`;
      }
      authorFound = true;
      continue;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –∫–∞–∫ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏
    if (titleFound && authorFound) {
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º (–ø—Ä–∏–ø–µ–≤, –∫—É–ø–ª–µ—Ç –∏ —Ç.–¥.)
      const isHeader = 
        line.toLowerCase().includes('–ø—Ä–∏–ø–µ–≤') || 
        line.toLowerCase().includes('–∫—É–ø–ª–µ—Ç') ||
        line.toLowerCase().includes('chorus') ||
        line.toLowerCase().includes('verse') ||
        line.toLowerCase().includes('–±—Ä–∏–¥–∂') ||
        line.toLowerCase().includes('bridge');
      
      if (isHeader) {
        // –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫, –≤—ã–¥–µ–ª—è–µ–º –µ–≥–æ
        formattedText += `üéº ${line.toUpperCase().trim()} üéº\n`;
      } else if (line.trim()) {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–∫–∫–æ—Ä–¥—ã –≤ —Ç–µ–∫—Å—Ç–µ
        const processedLine = highlightChords(line);
        formattedText += processedLine + '\n';
      } else {
        // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
        formattedText += '\n';
      }
    }
  }
  
  return formattedText;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –∞–∫–∫–æ—Ä–¥–æ–≤ –∫—Ä–∞—Å–Ω—ã–º —Ü–≤–µ—Ç–æ–º
function highlightChords(text) {
  // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–∫–∫–æ—Ä–¥–æ–≤
  // –ü–æ–∏—Å–∫ —Å–æ—á–µ—Ç–∞–Ω–∏–π –≤–∏–¥–∞ A, Am, C#, Dm7, G/B –∏ —Ç.–¥.
  const chordRegex = /\b([ACDEFG–ùB][#‚ôØ‚ô≠b]?(?:m|min|maj|sus|add|aug|dim)?(?:[2-9]|11|13)?(?:\/[ACDEFG–ùB][#‚ôØ‚ô≠b]?)?)(?=\s|$|\b)/g;
  
  // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∞–∫–∫–æ—Ä–¥—ã –Ω–∞ —Ç–µ–≥, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π Telegram
  // –í Telegram HTML –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–µ–≥–∏: b, i, u, s, a, code, pre
  return text.replace(chordRegex, '<b><i>$1</i></b>');
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Å–µ–Ω –∏–∑ Google Docs
async function getSongs() {
  try {
    console.log('–í—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è getSongs');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    const now = Date.now();
    if (cache.songs.length > 0 && cache.lastUpdate && (now - cache.lastUpdate < cache.updateInterval)) {
      console.log(`–í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Å–Ω–∏ (${cache.songs.length} —à—Ç.)`);
      
      // –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–µ—Ä–≤—ã—Ö –ø–µ—Å–Ω—è—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (cache.songs.length > 0) {
        console.log('–ü—Ä–∏–º–µ—Ä—ã –ø–µ—Å–µ–Ω –∏–∑ –∫–µ—à–∞:');
        for (let i = 0; i < Math.min(3, cache.songs.length); i++) {
          console.log(`${i + 1}. ${cache.songs[i].title}`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –ø–µ—Å–Ω—è "–ü–∞—Ä—É—Å" –≤ –∫–µ—à–µ
        const parusSong = cache.songs.find(song => 
          song.title.toLowerCase().includes('–ø–∞—Ä—É—Å') || 
          song.fullText.toLowerCase().includes('–ø–∞—Ä—É—Å')
        );
        
        if (parusSong) {
          console.log('–ü–µ—Å–Ω—è "–ü–∞—Ä—É—Å" –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–µ—à–µ:', parusSong.title);
        } else {
          console.log('–ü–µ—Å–Ω—è "–ü–∞—Ä—É—Å" –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–µ—à–µ!');
        }
      }
      
      return cache.songs;
    }
    
    console.log('–ö–µ—à —É—Å—Ç–∞—Ä–µ–ª, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –∑–∞–Ω–æ–≤–æ');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    const document = await getDocumentContent();
    if (!document || !document.body || !document.body.content) {
      console.error('–î–æ–∫—É–º–µ–Ω—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
      return [];
    }
    
    const songs = [];
    let currentSong = null;
    let nextLineIsAuthor = false;
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–∞, —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${document.body.content.length}`);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    for (const element of document.body.content) {
      if (element.paragraph) {
        const text = extractParagraphText(element.paragraph);
        
        if (text.includes('‚ô≠')) {
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø–µ—Å–Ω—é, –µ—Å–ª–∏ –±—ã–ª–∞
          if (currentSong) {
            songs.push(currentSong);
          }
          
          // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –ø–µ—Å–Ω—é
          const cleanTitle = text.replace('‚ô≠', '').trim();
          currentSong = { title: cleanTitle, author: '', fullText: text };
          nextLineIsAuthor = true;
          
          console.log(`–ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –ø–µ—Å–Ω—è: ${cleanTitle}`);
        } 
        else if (currentSong && nextLineIsAuthor) {
          // –≠—Ç–∞ —Å—Ç—Ä–æ–∫–∞ - –∞–≤—Ç–æ—Ä
          currentSong.author = text.trim();
          currentSong.fullText +=  text;
          nextLineIsAuthor = false;
        }
        else if (currentSong) {
          // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∫ —Ç–µ–∫—Å—Ç—É –ø–µ—Å–Ω–∏
          currentSong.fullText += text;
        }
      }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –ø–µ—Å–Ω—é
    if (currentSong) {
      songs.push(currentSong);
    }
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${songs.length} –ø–µ—Å–µ–Ω –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ`);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–µ—Å–Ω–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
    const filteredSongs = songs.filter(song => song.title && song.title.trim().length > 2);
    console.log(`–ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –æ—Å—Ç–∞–ª–æ—Å—å ${filteredSongs.length} –ø–µ—Å–µ–Ω`);
    
    if (filteredSongs.length > 0) {
      // –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–µ—Ä–≤—ã—Ö –ø–µ—Å–Ω—è—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('–ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–µ—Å–µ–Ω:');
      for (let i = 0; i < Math.min(3, filteredSongs.length); i++) {
        console.log(`${i + 1}. ${filteredSongs[i].title}`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –ø–µ—Å–Ω—è "–ü–∞—Ä—É—Å" –≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–µ—Å–Ω—è—Ö
      const parusSong = filteredSongs.find(song => 
        song.title.toLowerCase().includes('–ø–∞—Ä—É—Å') || 
        song.fullText.toLowerCase().includes('–ø–∞—Ä—É—Å')
      );
      
      if (parusSong) {
        console.log('–ü–µ—Å–Ω—è "–ü–∞—Ä—É—Å" –Ω–∞–π–¥–µ–Ω–∞:', parusSong.title);
      } else {
        console.log('–ü–µ—Å–Ω—è "–ü–∞—Ä—É—Å" –ù–ï –Ω–∞–π–¥–µ–Ω–∞!');
      }
      
      cache.songs = filteredSongs;
      cache.lastUpdate = now;
      return filteredSongs;
    }
    
    console.log('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–µ—Å–µ–Ω –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏');
    return [];
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–µ—Å–µ–Ω:', error);
    // –ï—Å–ª–∏ –≤ –∫—ç—à–µ –µ—Å—Ç—å –ø–µ—Å–Ω–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ö –¥–∞–∂–µ –µ—Å–ª–∏ –∫—ç—à —É—Å—Ç–∞—Ä–µ–ª
    if (cache.songs.length > 0) {
      console.log(`–í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Å–Ω–∏ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ (${cache.songs.length} —à—Ç.)`);
      return cache.songs;
    }
    console.log('–ö–µ—à –ø—É—Å—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤');
    return [];
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
async function getDocumentContent() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º ID –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–∑ URL
    const documentId = process.env.SONGBOOK_URL.includes('/d/') 
      ? process.env.SONGBOOK_URL.split('/d/')[1].split('/')[0]
      : process.env.SONGBOOK_URL;
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const serviceAccount = JSON.parse(process.env.GOOGLE_SERVICE_ACCOUNT);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google API —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    const auth = new google.auth.GoogleAuth({
      credentials: serviceAccount,
      scopes: ['https://www.googleapis.com/auth/documents.readonly']
    });

    const docs = google.docs({ version: 'v1', auth });
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç (—É–¥–∞–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä timeout, –æ–Ω –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è API)
    const response = await docs.documents.get({ documentId });
    
    return response.data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);
    throw error;
  }
}

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
function extractParagraphText(paragraph) {
  if (!paragraph.elements) return '';
  
  return paragraph.elements
    .map(element => {
      if (element.textRun && element.textRun.content) {
        return element.textRun.content;
      }
      return '';
    })
    .join('');
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –æ—Ä–ª—è—Ç—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞ —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
async function getRules() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    const now = Date.now();
    if (cache.rules && cache.lastUpdate && (now - cache.lastUpdate < cache.updateInterval)) {
      return cache.rules;
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –≤ –∫–µ—à–µ, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    const document = await getDocumentContent();
    if (!document || !document.body || !document.body.content) {
      console.error('–î–æ–∫—É–º–µ–Ω—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
      return null;
    }
    
    let rules = '';
    let foundSongStart = false;
    
    // –ò—â–µ–º —Ç–µ–∫—Å—Ç –¥–æ –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ ‚ô≠
    for (const element of document.body.content) {
      if (element.paragraph) {
        const text = extractParagraphText(element.paragraph);
        
        if (text.includes('‚ô≠')) {
          // –î–æ—Å—Ç–∏–≥–ª–∏ –ø–µ—Ä–≤–æ–π –ø–µ—Å–Ω–∏
          foundSongStart = true;
          break;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫ –ø—Ä–∞–≤–∏–ª–∞–º
        if (text.trim()) {
          rules += text.trim() + '\n';
        }
      }
    }
    
    if (!foundSongStart || rules.trim().length === 0) {
      return null;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ –≤ –∫–µ—à
    cache.rules = rules.trim();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–µ—à–∞, –µ—Å–ª–∏ –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
    if (!cache.lastUpdate) {
      cache.lastUpdate = now;
    }
    
    return cache.rules;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª:', error);
    return null;
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–æ–≤ –¥–ª—è Vercel
module.exports = async (req, res) => {
  try {
    // –ï—Å–ª–∏ —ç—Ç–æ GET –∑–∞–ø—Ä–æ—Å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
    if (req.method === 'GET') {
      return res.json({ status: 'OK', timestamp: new Date().toISOString() });
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ POST –∑–∞–ø—Ä–æ—Å, –æ—Ç–∫–ª–æ–Ω—è–µ–º
    if (req.method !== 'POST') {
      return res.status(405).json({ error: 'Method not allowed' });
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
    await bot.handleUpdate(req.body);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    return res.status(200).send('OK');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
};

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
if (process.env.NODE_ENV !== 'production') {
  bot.launch()
    .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling'))
    .catch(err => console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', err));
}
